import{_ as e,c as i,o as r,a4 as o}from"./chunks/framework.CC18aqI2.js";const l="/assets/MaskKey.D60FzYnF.png",a="/assets/uupdump-arch.CeG4MD5b.png",t="/assets/uupdump-update.Yaa_NjXU.png",b=JSON.parse('{"title":"Windows 11 ARM on OPi5","description":"","frontmatter":{"title":"Windows 11 ARM on OPi5","author":"Brian Knackstedt","creationdate":"06/30/2024","lastModified":"06/30/2024"},"headers":[],"relativePath":"Windows/Windows ARM/Windows11ARM-on-OPi5.md","filePath":"Windows/Windows ARM/Windows11ARM-on-OPi5.md","lastUpdated":null}'),n={name:"Windows/Windows ARM/Windows11ARM-on-OPi5.md"},s=o('<h1 id="windows-11-arm-on-opi5" tabindex="-1">Windows 11 ARM on OPi5 <a class="header-anchor" href="#windows-11-arm-on-opi5" aria-label="Permalink to &quot;Windows 11 ARM on OPi5&quot;">​</a></h1><p>This guide describes how to install the latest Windows 11 ARM image on an Orange Pi 5.</p><h2 id="hardware-requirements" tabindex="-1"><strong>Hardware Requirements</strong> <a class="header-anchor" href="#hardware-requirements" aria-label="Permalink to &quot;**Hardware Requirements**&quot;">​</a></h2><ul><li><p>Orange Pi 5 (<a href="http://www.orangepi.org/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-5.html" target="_blank" rel="noreferrer">OPi5</a>) and newer devices support ARMv8.2 Windows 11 requires ARMv8.1 As of June 2024, Orange Pi 5 Pro is not supported</p></li><li><p>USB hub (<a href="https://www.amazon.com/gp/product/B08P3GDLVP" target="_blank" rel="noreferrer">uni USB C to USB Hub 4 Ports</a>) USB hub is requires as only the vertical USB-A ports will work for keyboard and mouse. Any USB hub may work, this is just want I had.</p></li><li><p>USB-C to USB-A adapter for hub</p></li><li><p>NVMe drive (<a href="https://www.amazon.com/gp/product/B07XVTRFF8/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;th=1" target="_blank" rel="noreferrer">SABRENT 1TB Rocket NVMe PCIe M.2 2242</a>) Must be NVMe M.2. Some NVMe drives do not have driver support. All M.2 SATA drives do not have driver support.</p></li><li><p><a href="https://www.amazon.com/gp/product/B086T2KXGQ" target="_blank" rel="noreferrer">M.2 SSD Screw Set</a></p></li><li><p>USB keyboard and mouse</p></li></ul><h2 id="install-uefi-firmware-to-spi-nor-flash" tabindex="-1"><strong>Install UEFI firmware to SPI NOR flash</strong> <a class="header-anchor" href="#install-uefi-firmware-to-spi-nor-flash" aria-label="Permalink to &quot;**Install UEFI firmware to SPI NOR flash**&quot;">​</a></h2><p>Reference: <a href="https://wiki.radxa.com/Rock5/install/spi" target="_blank" rel="noreferrer">https://wiki.radxa.com/Rock5/install/spi</a> (section 4, option 2)</p><ul><li><p>Download rkdevtools and install driver</p><ul><li><a href="https://wiki.radxa.com/Rock5/install/rockchip-flash-tools" target="_blank" rel="noreferrer">https://wiki.radxa.com/Rock5/install/rockchip-flash-tools</a></li></ul></li><li><p>Download latest EDK2 UEFI firmware for Orange Pi 5 0.9.1 does not support built-in GMAC ethernet, use a newer build.</p></li><li><p>Open <a href="https://github.com/edk2-porting/edk2-rk3588/actions/workflows/build.yml" target="_blank" rel="noreferrer">https://github.com/edk2-porting/edk2-rk3588/actions/workflows/build.yml</a></p></li><li><p>Sign in to GitHub</p></li><li><p>Select latest successful build</p></li><li><p>Download orangepi-5 UEFI Debug image</p></li><li><p>Extract download</p><p><strong>Write firmware</strong></p></li><li><p>Open RKDevTool as Administrator</p></li><li><p>Right-click and select Load Config</p><ul><li><p>Select rock-5b-spinor.cfg</p></li><li><p>Click empty box under … to select file</p><ul><li>Rk3588_spl_loader.bin for Loader</li></ul></li><li><p>Orangepi-5_UEFI.img for Image</p></li><li><p>Check Write by Address</p></li><li><p>Connect OPi5 from USB-C port to PC</p></li></ul></li><li><p>Hold down MARKROM button and connect USB-C power, wait a few seconds and release button</p><p><img src="'+l+'" alt="MaskKey"></p></li><li><p>Status in RKDevTool should change from No Devices Found to Found One MASKROM Device</p></li><li><p>Click Run</p></li><li><p>Process is done when &quot;Download image OK&quot; is displayed in the logging pane.</p></li></ul><p>OPi5 will restarts by itself and exits MASKROM mode</p><ul><li>Disconnect from PC</li></ul><h2 id="download-drivers" tabindex="-1"><strong>Download Drivers</strong> <a class="header-anchor" href="#download-drivers" aria-label="Permalink to &quot;**Download Drivers**&quot;">​</a></h2><p>Driver download messages are pinned in the #development channel</p><ul><li><p>Download and extract RK3588 signed drivers</p><ul><li><a href="https://discord.com/channels/1082772881735438346/1082848823233216532/1236925998696763392" target="_blank" rel="noreferrer">https://discord.com/channels/1082772881735438346/1082848823233216532/1236925998696763392</a></li></ul></li><li><p>Download updated storage driver (pdb, inf, and sys)</p><ul><li><a href="https://github.com/worproject/Rockchip-Windows-Drivers/tree/storportDriver/drivers/storage" target="_blank" rel="noreferrer">https://github.com/worproject/Rockchip-Windows-Drivers/tree/storportDriver/drivers/storage</a></li></ul></li><li><p>Download updated USB driver (inf and sys)</p><ul><li><a href="https://github.com/worproject/Rockchip-Windows-Drivers/tree/master/drivers/usb/usbehci_nointerlocked" target="_blank" rel="noreferrer">https://github.com/worproject/Rockchip-Windows-Drivers/tree/master/drivers/usb/usbehci_nointerlocked</a></li></ul></li><li><p>Add updated drivers to rk3588_drivers zip file</p></li></ul><h2 id="download-windows-arm64-release-package" tabindex="-1"><strong>Download Windows arm64 release package</strong> <a class="header-anchor" href="#download-windows-arm64-release-package" aria-label="Permalink to &quot;**Download Windows arm64 release package**&quot;">​</a></h2><ul><li><p>Open <a href="https://uupdump.net/" target="_blank" rel="noreferrer">https://uupdump.net/</a></p></li><li><p>Select arm64 build, typically choose the latest public release build</p><p><img src="'+a+'" alt="uupdump-arch"></p></li><li><p>Select update</p><p><img src="'+t+'" alt="uupdump-update"></p></li><li><p>Choose language and click Next</p></li><li><p>Uncheck Windows Home and click Next</p></li><li><p>Select Download, add additional editions and convert to ISO</p></li><li><p>Check only Windows Enterprise</p></li><li><p>Click Create download package file to download package</p></li><li><p>Extract package to a folder that does not contain spaces in the path</p></li></ul><h2 id="generate-windows-iso" tabindex="-1"><strong>Generate Windows ISO</strong> <a class="header-anchor" href="#generate-windows-iso" aria-label="Permalink to &quot;**Generate Windows ISO**&quot;">​</a></h2><ul><li>Run uup_download_windows.cmd</li><li>Wait 60-minutes for files to be downloaded, processed, and ISO generated</li></ul><h2 id="install-windows-onto-nvme-drive" tabindex="-1"><strong>Install Windows onto NVMe Drive</strong> <a class="header-anchor" href="#install-windows-onto-nvme-drive" aria-label="Permalink to &quot;**Install Windows onto NVMe Drive**&quot;">​</a></h2><ul><li>Download and extract imager</li></ul><p>Ignore that it says Raspberry. This was original built for Raspberry Pi devices, but developer has been extended support to Orange Pi devices)</p><ul><li><p><a href="https://worproject.com/downloads#windows-on-raspberry-imager" target="_blank" rel="noreferrer">https://worproject.com/downloads#windows-on-raspberry-imager</a></p></li><li><p>Plug the NVMe drive into your PC</p></li><li><p>Run WoR.exe as an Administrator</p><ul><li>Set wizard mode = Select show all options</li><li>Select storage device and device type = Raspberry Pi 2/3</li><li>Select ISO image and Windows Pro build</li><li>For drivers, select the downloaded rk3588_drivers-v2.zip file</li><li>For UEFI firmware, leave use the latest firmware. This doesn&#39;t really apply to OPi5.</li><li>Leave defaults for configuration</li><li>Click Install</li><li>Wait for the Windows offline install to complete</li><li>Click Finish</li></ul></li></ul><h2 id="windows-setup" tabindex="-1"><strong>Windows Setup</strong> <a class="header-anchor" href="#windows-setup" aria-label="Permalink to &quot;**Windows Setup**&quot;">​</a></h2><ul><li>Install NVMe drive into the bottom of your OPi5</li><li>Power-on OPi5</li><li>Wait 30+ minutes for Windows to finish setup</li></ul><p>System may be slow while .NET optimization runs</p><ul><li>Disable Windows Search service</li><li>Disable Print Spooler service</li><li>Uninstall all unused apps</li><li>Open Microsoft Store and update all. Might need to be run multiple times</li><li>Configure and run Windows Updates</li><li>Rename device</li></ul><h2 id="installing-and-configuring-hyper-v" tabindex="-1"><strong>Installing and Configuring Hyper-V</strong> <a class="header-anchor" href="#installing-and-configuring-hyper-v" aria-label="Permalink to &quot;**Installing and Configuring Hyper-V**&quot;">​</a></h2><ul><li>Create C:\\Hyper-V folder</li><li>Open Control Panel &gt; Uninstall a program &gt; Turn Windows features on or off <ul><li>Check Hyper-V</li><li>Uncheck Windows PowerShell 2.0</li><li>Uncheck Work Folder Client</li><li>Click OK</li></ul></li><li>Configure Hyper-V Settings</li><li>Configure Hyper-V external virtual switch</li></ul><h2 id="thank-you" tabindex="-1"><strong>Thank you</strong> <a class="header-anchor" href="#thank-you" aria-label="Permalink to &quot;**Thank you**&quot;">​</a></h2><p>This guide wouldn&#39;t have been possible without Mario Bălănică, the developers, and the community that supports the Windows on R project.</p><ul><li><a href="https://worproject.com/" target="_blank" rel="noreferrer">Windows on R Project</a></li><li><a href="https://discord.gg/vjHwptUCa3" target="_blank" rel="noreferrer">Windows on R Community Discord</a></li></ul>',29),d=[s];function p(u,c,h,w,g,m){return r(),i("div",null,d)}const k=e(n,[["render",p]]);export{b as __pageData,k as default};
